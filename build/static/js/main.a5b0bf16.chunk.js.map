{"version":3,"sources":["reactbyprojects/Chapter 10/useModal.jsx","reactbyprojects/Chapter 10/CustomHooks1.jsx","index.js"],"names":["useModal","theContent","theIsThereButton","theButtonText","theCloseButton","theCloseButtonText","_useState","useState","_useState2","_slicedToArray","isShowing","setIsShowing","_useState3","_useState4","content","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","closeButtonText","Modal","_jsx","_Fragment","children","_jsxs","style","width","height","backgroundColor","border","onClick","console","log","useEffect","CustomHooks3","rootElement","document","getElementById","createRoot","render"],"mappings":"8JAIMA,EAAW,SAACC,EAAYC,EAAkBC,EAAeC,EAAgBC,GAC3E,IAAAC,EAAkCC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAA8BL,mBAASN,GAAWY,EAAAJ,YAAAG,EAAA,GAA3CE,EAAOD,EAAA,GACdE,GAD0BF,EAAA,GACgBN,mBAASL,IAAiBc,EAAAP,YAAAM,EAAA,GACpEE,GADoBD,EAAA,GAAkBA,EAAA,GACFT,mBAASJ,IAAce,EAAAT,YAAAQ,EAAA,GAC3DE,GADiBD,EAAA,GAAeA,EAAA,GACMX,mBAASH,IAAegB,EAAAX,YAAAU,EAAA,GAC9DE,GADkBD,EAAA,GAAgBA,EAAA,GACYb,mBAASF,IAAmBiB,EAAAb,YAAAY,EAAA,GAAnEE,EAAeD,EAAA,GAMhBE,GANoCF,EAAA,GAM5B,WAGV,OAFIR,GAASH,GAAa,GAGtBc,cAAAC,WAAA,CAAAC,SACKjB,GACDkB,eAAA,OAAKC,MACD,CAACC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,YACjBC,OAAQ,iBACPN,SAAA,CACFF,cAAA,KAAAE,SAAIb,IACJW,cAAA,SACAA,cAAA,UAAQS,QAAS,kBAhBPvB,GAAa,QAAQwB,QAAQC,IAAI,UAgBR,EAACT,SAAEJ,QAItD,GAMA,OAJAc,qBAAU,WACNb,GACJ,GAAG,CAACd,IAEGe,cAACD,EAAK,GACjB,ECxBMc,EAAe,WAEjB,OADctC,EAAS,WAAW,EAAM,QAAQ,EAAM,QAE1D,EChBMuC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OAAOlB,cAACa,EAAY,I","file":"static/js/main.a5b0bf16.chunk.js","sourcesContent":["// show a modal/an alert box\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst useModal = (theContent, theIsThereButton, theButtonText, theCloseButton, theCloseButtonText) => {\r\n    const [isShowing, setIsShowing] = useState(true);\r\n    const [content, setContent] = useState(theContent);\r\n    const [isThereButton, setIsThereButton] = useState(theIsThereButton);\r\n    const [buttonText, setButtonText] = useState(theButtonText);\r\n    const [closeButton, setCloseButton] = useState(theCloseButton);\r\n    const [closeButtonText, setCloseButtonText] = useState(theCloseButtonText);\r\n    \r\n    //const [isContent, setIsContent] = useState(true);\r\n    \r\n    const closeModal = () => {setIsShowing(false); console.log(\"clicked\");};\r\n    \r\n    const Modal = () => {\r\n        if(!content) setIsShowing(false);\r\n        \r\n        return (\r\n            <>\r\n                {isShowing &&\r\n                <div style={\r\n                    {width: \"400px\", \r\n                     height: \"200px\", \r\n                     backgroundColor: \"LightGrey\",\r\n                     border: \"2px solid red\"}\r\n                     }>\r\n                    <p>{content}</p>\r\n                    <br />\r\n                    <button onClick={() => closeModal()}>{closeButtonText}</button>\r\n                </div>} \r\n            </>\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        Modal();\r\n    }, [isShowing]);\r\n    \r\n    return <Modal />;\r\n}\r\n\r\nexport { useModal };","import React from \"react\";\r\nimport { useGreeting } from \"./useGreeting\";\r\nimport { useHeader } from \"./useHeader\";\r\nimport { useModal } from \"./useModal\";\r\n\r\nconst CustomHooks1 = () => {\r\n    const {header, headerTitle} = useHeader(\"Hello World\", \"red\", \"low\");\r\n    header.color = \"purple\";\r\n    return <h1 style={header}>{headerTitle}</h1>;\r\n};\r\n\r\nconst CustomHooks2 = () => {\r\n    const message = useGreeting(\"\", \"\", 0);\r\n    \r\n    return <h1>{`${message.greeting}`}</h1>\r\n}\r\n\r\nconst CustomHooks3 = () => {\r\n    const modal = useModal(\"ORIGINS\", true, \"Okay\", true, \"Close\");\r\n    return modal;\r\n}\r\n\r\nexport { CustomHooks3 };","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { CustomHooks3 } from \"./reactbyprojects/Chapter 10/CustomHooks1\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<CustomHooks3 />);\n"],"sourceRoot":""}